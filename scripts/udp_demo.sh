#!/bin/bash

# UDP Server and Client Demo Script
# This script demonstrates how to use the UDP server and client programs

echo "=== UDP SERVER AND CLIENT DEMO ==="
echo ""

echo "📋 Available programs:"
echo "  ./udp_server  - Starts UDP server on port 9999"
echo "  ./udp_client  - Sends messages to UDP server"
echo "  ./udp_test    - Combined test of server and client"
echo ""

echo "🚀 Usage Examples:"
echo ""

echo "1. Start UDP Server (in one terminal):"
echo "   ./udp_server"
echo ""

echo "2. Send messages from UDP Client (in another terminal):"
echo "   ./udp_client \"Hello Server!\""
echo "   ./udp_client \"Custom message\" 192.168.1.100"
echo "   ./udp_client                    # Interactive mode"
echo ""

echo "3. Run combined test:"
echo "   ./udp_test"
echo ""

echo "🔧 UDP Server Features:"
echo "  • Binds to port 9999"
echo "  • Accepts messages from any IP address"
echo "  • Echoes received messages back to clients"
echo "  • Shows client IP and port information"
echo "  • Graceful shutdown with Ctrl+C"
echo ""

echo "🔧 UDP Client Features:"
echo "  • Sends messages to specified server"
echo "  • Waits for server response (5 second timeout)"
echo "  • Command line or interactive input"
echo "  • Validates echo responses"
echo "  • Error handling for network issues"
echo ""

echo "📊 UDP vs TCP Comparison:"
echo "┌──────────────┬─────────────┬─────────────┐"
echo "│ Feature      │ UDP         │ TCP         │"
echo "├──────────────┼─────────────┼─────────────┤"
echo "│ Connection   │ Connectionless │ Connection-oriented │"
echo "│ Reliability  │ Unreliable  │ Reliable    │"
echo "│ Speed        │ Faster      │ Slower      │"
echo "│ Overhead     │ Low         │ High        │"
echo "│ Header Size  │ 8 bytes     │ 20+ bytes   │"
echo "│ Ordering     │ None        │ Guaranteed  │"
echo "│ Use Cases    │ Gaming, DNS │ Web, Email  │"
echo "└──────────────┴─────────────┴─────────────┘"
echo ""

echo "💡 When to use UDP:"
echo "  • Real-time applications (gaming, streaming)"
echo "  • Simple request/response (DNS queries)"
echo "  • Broadcasting/multicasting"
echo "  • Low latency requirements"
echo "  • IoT sensor data"
echo ""

echo "💡 When to use TCP:"
echo "  • Reliable data transfer required"
echo "  • File transfers"
echo "  • Web browsing (HTTP/HTTPS)"
echo "  • Email (SMTP, POP3, IMAP)"
echo "  • Database connections"
echo ""

echo "🔍 Implementation Details:"
echo ""
echo "UDP Server Implementation:"
echo "  1. socket(AF_INET, SOCK_DGRAM, 0)     # Create UDP socket"
echo "  2. bind() to port and address         # Bind to specific port"
echo "  3. recvfrom() in loop                 # Receive messages"
echo "  4. sendto() response                  # Send responses"
echo ""
echo "UDP Client Implementation:"
echo "  1. socket(AF_INET, SOCK_DGRAM, 0)     # Create UDP socket"
echo "  2. sendto() with server address       # Send to server"
echo "  3. recvfrom() for response            # Receive response"
echo "  4. close() socket                     # Clean up"
echo ""

echo "🎯 Key Learning Points:"
echo "  • UDP is connectionless - no handshake needed"
echo "  • Each message is independent"
echo "  • No delivery guarantee - messages may be lost"
echo "  • Lower latency than TCP"
echo "  • Application must handle reliability if needed"
echo "  • Perfect for real-time applications"
echo ""

echo "✅ Demo script complete!"
echo "   Ready to run UDP programs!"
